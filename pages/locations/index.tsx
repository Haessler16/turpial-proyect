import { gql, useQuery } from '@apollo/client'
import { Box, Button, Center, Grid } from '@chakra-ui/react'
import Loader from 'components/Loader'
import { LocationCard } from 'components/LocationCard'
import { MainLayout } from 'layouts/main'
import Head from 'next/head'
import { LocationsData } from 'utils/interfaces/location'

const GET_ALL_LOCATIONS = gql`
  query Locations($page: Int!) {
    locations(page: $page) {
      info {
        next
        prev
        pages
        count
      }
      results {
        id
        name
        type
        dimension
      }
    }
  }
`

export default function Locations() {
  const { loading, error, data, refetch } = useQuery<LocationsData>(
    GET_ALL_LOCATIONS,
    {
      variables: { page: 1 },
    },
  )

  if (loading) return <Loader />
  if (error) return <h1>Error! {error.message}</h1>
  if (!data) return <h1>No data</h1>
  console.log({ data })

  return (
    <MainLayout>
      <Head>
        <title>Rick and Morty Project</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/logo.png' />
      </Head>

      <Grid
        id='characters_grid'
        templateColumns='repeat(auto-fit, minmax(min(100%, 20rem), 1fr))'
        justifyItems='center'
        gap={2}>
        {data.locations.results.map((location) => {
          return <LocationCard key={location.id} location={location} />
        })}
      </Grid>

      <Center my={6} gap={8}>
        <Button
          name='prev_page'
          onClick={() => refetch({ page: data?.locations?.info.prev })}>
          Prev page
        </Button>

        <Button
          name='next_page'
          onClick={() => refetch({ page: data?.locations?.info.next })}>
          Next page
        </Button>
      </Center>
    </MainLayout>
  )
}
